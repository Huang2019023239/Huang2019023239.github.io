<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HuangQiCheng</title>
  
  <subtitle>江戸寒桜</subtitle>
  <link href="https://huang2019023239.github.io/atom.xml" rel="self"/>
  
  <link href="https://huang2019023239.github.io/"/>
  <updated>2021-05-28T14:03:11.656Z</updated>
  <id>https://huang2019023239.github.io/</id>
  
  <author>
    <name>HuangQiCheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DIY 服务器配置</title>
    <link href="https://huang2019023239.github.io/2020/05/27/diy-deploy-server/"/>
    <id>https://huang2019023239.github.io/2020/05/27/diy-deploy-server/</id>
    <published>2020-05-27T14:48:40.000Z</published>
    <updated>2021-05-28T14:03:11.656Z</updated>
    
    <content type="html"><![CDATA[<p>#前提假设<br>组装电脑（4人用）：<br><br>基本配置需求如下：<br><br>内存DDR4 2400 32G<br><br>M.2接口固态 512G（用于存放程序和安装系统）<br><br>机械硬盘 7200转 1T（用于存放数据）<br><br>显卡 GTX 1650<br><br>CPU 英特尔 至强 E5-2680v4（这个4指的是支持DDR4）<br><br>主板华南金牌 X99-F8<br><br>机箱EATX型<br><br>cpu要3风扇<br><br>注：内存要匹配cpu，主板的最大支持频率</p><hr><h2 id="装机"><a href="#装机" class="headerlink" title="装机"></a>装机</h2><p>1.使用<a href="https://rufus.ie/zh/">Rufus</a> 烧录centos7的iso镜像（DVD或者Everything那个，可选国内镜像）如<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">阿里镜像</a> 和 <a href="https://developer.aliyun.com/mirror/">阿里云官方镜像</a> <br><br>2.u盘启动安装<br>3.网线/wifi联网(可以先ping看是否链接上网,右键桌面打开terminal输入)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ping</span> www.baidu.com <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.1 备份旧源（可选）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">mkdir</span> /etc/yum.repos.d/backup $ <span class="token function">mv</span> CentOS-Base.repo CentOS-Base.repo.old$ <span class="token function">wget</span> http://mirrors.aliyun.com/repo/Centos-7.repo$ <span class="token function">wget</span>  http://mirrors.aliyun.com/repo/epel-7.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3.2 如果没有网就:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum update -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.连上网后先检查ifconfig查看IP地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ifconfig</span> -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.1 如果没有上面命令报错</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ yum <span class="token function">install</span> net-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.2 可能也少这几个</p><pre class="line-numbers language-none"><code class="language-none">$ yum install kernel-devel gcc -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="IP地址设置，申请固定IP，可以问学校申请"><a href="#IP地址设置，申请固定IP，可以问学校申请" class="headerlink" title="IP地址设置，申请固定IP，可以问学校申请"></a>IP地址设置，申请固定IP，可以问学校申请</h2><ol><li>开启ssh协议, Centos7网卡一般放如下位置<pre class="line-numbers language-none"><code class="language-none">$ cd /etc/sysconfig/network-scripts$ llor$ ls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>1 找到你的网卡一般是ifcfg-enp啥的<br><img src="/pic%5C1.PNG" alt="例如"></li></ol><p>1.2 vim 修改网卡文件(这里要替换你的网卡文件名字)</p><pre class="line-numbers language-none"><code class="language-none">$ vim ifcfg-enps5s0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1.2.1 键入I或A进入修改模式</p><pre class="line-numbers language-none"><code class="language-none">TYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=none （或者static）DEFROUTE=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=enp5s0 #(要改你的)UUID=e19bc806-a8fd-4380-b352-858d0003e26eDEVICE=enp5s0  #(要改你的)ONBOOT=yesIPADDR=  #(输入学校给的IP)NETMASK=255.255.255.0 #(子网掩码)PREFIX=25GATEWAY= #(网关)DNS1=  #(DNS服务器1个就够)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.2.2 大概如上<br><br>注：若没有申请固定IP，则只能填当前路由器范围内的可选IP ，即掩码后IP与路由IP掩码后的一致（如路由192.168.1.1，则可以是192.168.1.198，这个198可以换成0-255可选值）<br><br>浏览器登录路由器IP设置静态IP绑定或虚拟机服务（填上你设置的IP，端口22（SSH默认），FTP，ALL协议）并最好绑定MAC地址你的IP和你的mac地址（命令ifconfig -a可查）</p><pre class="line-numbers language-none"><code class="language-none">$ ifconfig -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1.3 拓展操作(单IP，多服务器，单路由器)<br><br>一个固定IP用路由器当交换机分配多台服务器：<br><br>路由器WAN端口查外部网线，LAN端口连到服务器<br><br>登录路由器设置：<br><br>1：设置路由器IP为申请的IP，网关子网掩码DNS也要一并设置为申请的<br><br>2：关闭DHCP（IP自动分发协议）<br><br>3：设置一个IP【为路由器IP子网下（路由器一般192.168.1.0），例如192.168.1.2，大于2就行，因为192.168.1.1为默认LAN端口】为与你要连接的服务器自身的mac地址绑定。<br><br>4：设置端口分配，内部端口默认22，外部端口设置一个唯一的，IP地址就填上面分配给服务器的。<br><br>5：连接时IP填申请的固定IP，端口填刚刚分配给服务器对应的外部端口<br><br>提示，若LAN口不够时，再加一台路由器LAN口接上一台的LAN口，WAN口不接，接了的话会形成多个子网，此时外接的路由器的LAN端口要设置最后一段不同，如192.168.1.2，若WAN口接上一台LAN口，则LAN口设置倒数第二段不同，如192.168.X.1，这里X不是1就行）</p><p>1.4 检查SSH服务</p><pre class="line-numbers language-none"><code class="language-none">$ systemctl status sshd.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果inactivate(若active则会绿色突出显示)</p><pre class="line-numbers language-none"><code class="language-none">$ systemctl enable sshd.service$ systemctl start sshd.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其端口一般在 /etc/ssh/sshd-config 中 可vim修改 取消注释 PORT 22 下面再加  PORT xx（你的设置），成功后可注释掉22的，当然路由器端口绑定也得改</p><p>1.5 检查测试</p><pre class="line-numbers language-none"><code class="language-none">$ ping （自己的IP）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用同级网络下另一台电脑putty/shell等FTP链接</p><hr><h2 id="挂载硬盘（可选）"><a href="#挂载硬盘（可选）" class="headerlink" title="挂载硬盘（可选）"></a>挂载硬盘（可选）</h2><ol><li>列出你的硬盘设备<pre class="line-numbers language-none"><code class="language-none">$ fdisk -l$ mount  （需挂载硬盘） （挂载文件夹）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>永久挂载<pre class="line-numbers language-none"><code class="language-none">$ vim /etc/fstab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>在文件中添加 /dev/sdb1 （需挂载硬盘）      /opt（挂载文件夹）      ext3（文件系统类型）   defaults   1（是否备份） 1（启动时是否扫描）</li></ol><p>即时生效挂载信息</p><pre class="line-numbers language-none"><code class="language-none">$ mount -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装Python3-7，系统自带Python2-7"><a href="#安装Python3-7，系统自带Python2-7" class="headerlink" title="安装Python3.7，系统自带Python2.7"></a>安装Python3.7，系统自带Python2.7</h2><pre class="line-numbers language-none"><code class="language-none">$ which python$ cd /usr/bin$ wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz$ tar zxvf Python-3.7.2.tgz$ mv Python-3.7.2/ /usr/local/$ yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel gcc libffi-devel gcc make automake autoconf libtool libffi-devel$ cd /usr/local/Python-3.7.2$ ./configure --prefix=/usr/local/python3$ ./configure --enable-optimizations$ make &amp;&amp; make install配置软链接$ ln -s /usr/local/python3/bin/python3.7 /usr/bin/python3$ ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置nvidia驱动"><a href="#配置nvidia驱动" class="headerlink" title="配置nvidia驱动"></a>配置nvidia驱动</h2><p><a href="https://blog.csdn.net/guohaosun/article/details/82749029">参考</a> <br><br>1.导入公钥</p><pre class="line-numbers language-none"><code class="language-none">$ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.To install ELRepo for RHEL-7, SL-7 or CentOS-7:</p><pre class="line-numbers language-none"><code class="language-none">$ rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.安装显卡检查程序，检查内核，源码版本是否一致</p><pre class="line-numbers language-none"><code class="language-none">$ ls /boot | grep vmlinu$ rpm -aq | grep kernel-devel（之前可关闭自带集成显卡驱动：lsmod | grep nouveau $ vim /lib(这里可能在/etc)/modprobe.d/dist-blacklist.conf注释 #blacklist nvidiafb添加 blacklist nouveau        options nouveau modeset=0或$ su root$ echo -e "blacklist nouveau\noptions nouveau modeset=0" &gt; /etc/modprobe.d/blacklist.conf）后重启 reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.先备份系统启动引导文件镜像（可选）</p><pre class="line-numbers language-none"><code class="language-none">$ cp /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后建立新的镜像</p><pre class="line-numbers language-none"><code class="language-none">$ dracut /boot/initramfs-$(uname -r).img $(uname -r)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.查找合适驱动</p><pre class="line-numbers language-none"><code class="language-none">$ yum install nvidia-detect$ nvidia-detect &gt;&gt; kmod-nvidia<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>6.安装合适版本驱动</p><pre class="line-numbers language-none"><code class="language-none">$ yum install $(nvidia-detect)//也可以查找软件源中驱动程序$ yum search kmod-nvidia<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>7.reboot（必须!）</p><pre class="line-numbers language-none"><code class="language-none">$ reboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8.需要卸载的时候 显卡驱动卸载（yum 安装模式的卸载）查看安装的nvidia模块命令</p><pre class="line-numbers language-none"><code class="language-none">$ rpm -qa|grep -i nvid|sort$ yum  remove kmod-nvidia-*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>9.安装 <a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=CentOS&amp;target_version=7&amp;target_type=rpm_local">cuda</a>，然后</p><pre class="line-numbers language-none"><code class="language-none">$ wget https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda-repo-rhel7-11-3-local-11.3.1_465.19.01-1.x86_64.rpm$ sudo rpm -i cuda-repo-rhel7-11-3-local-11.3.1_465.19.01-1.x86_64.rpm$ sudo yum clean all$ sudo yum -y install nvidia-driver-latest-dkms cuda$ sudo yum -y install cuda-drivers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我这里要用预先下载的cuda10 rpm版本不然版本对不上</p><pre class="line-numbers language-none"><code class="language-none">$ sudo rpm -i cuda-repo-rhel7-10-0-local-10.0.130-410.48-1.0-1.x86_64.rpm$ sudo yum clean all（可选清除所有yum缓存）$ sudo yum install cuda<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>10.安装<a href="https://developer.nvidia.com/cudnn-download-survey">cudnn</a><br>切换到压缩包所在位置，解压</p><pre class="line-numbers language-none"><code class="language-none">$ tar -xzvf&nbsp;cudnn-10.2-linux-x64-v7.6.5.32.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10.1 复制相关文件到cuda特定目录下(我的cuda安装目录为/usr/local/cuda/)</p><pre class="line-numbers language-none"><code class="language-none">$ sudo cp cuda/include/cudnn.h /usr/local/cuda/include$ sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>10.2 修改文件权限</p><pre class="line-numbers language-none"><code class="language-none">$ sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10.3 检查安装是否成功</p><pre class="line-numbers language-none"><code class="language-none">$ nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意pytorch/tensorflow（要使用gpu版本） + cuda+cudnn版本号要对应</p><p>11.python程序执行<br>上传py程序后cd到对应目录执行：</p><pre class="line-numbers language-none"><code class="language-none">python sample.py &gt;run.log 2&gt;e.log &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或创建脚本（vim xxx.sh)按i进入编辑模式（set paste进入可右键粘贴模式）<br>编写脚本大概如下：</p><pre class="line-numbers language-none"><code class="language-none">python sample.py -xxxx xx（这里为参数设置） &gt;run.log 2&gt;e.log &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按Esc 输入：wq 保存退出</p><pre class="line-numbers language-none"><code class="language-none">nohup sh xxx.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="可选操作"><a href="#可选操作" class="headerlink" title="可选操作"></a>可选操作</h2><p>##安装virtualenvwrapper</p><pre class="line-numbers language-none"><code class="language-none">$ pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple virtualenv$ ln -s /usr/Python-3.6.5/bin/virtualenv /usr/bin/virtualenv #创建软连接$ pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple virtualenvwrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改/.bashrc或者/.bash_profile</p><pre class="line-numbers language-none"><code class="language-none">$ vim ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按i或a修改，最后应写为</p><pre class="line-numbers language-none"><code class="language-none">export WORKON_HOME=$HOME/.virtualenvssource /usr/local/python3/bin/virtualenvwrapper.shexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/python3/bin/virtualenvexport PATH=/usr/local/cuda-10.0/bin:$PATHexport LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64:$LD_LIBRARY_PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按esc输入:wq保存并退出<br><br>立即生效</p><pre class="line-numbers language-none"><code class="language-none">$ source ~/.bashrc$ reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用方法：<br>创建自己的python虚拟环境<br>（1）    创建虚拟环境<br>创建虚拟环境（-p为指定python版本）<br>mkvirtualenv [虚拟环境名称] -p python3<br>创建虚拟环境时会同时配置好pip。</p><p>（2）    基本使用<br>进入（切换）虚拟环境<br>workon [虚拟环境名称]<br>退出虚拟环境<br>deactivate<br>列出虚拟环境下安装的包<br>lssitepackages 或者 pip list</p><p>（3）    其他可能用到的命令<br>列出所有虚拟环境<br>lsvirtualenv -b<br>进入虚拟环境主目录<br>cdvirtualenv [子目录]<br>复制虚拟环境<br>cpvirtualenv [source] [dest]<br>删除虚拟环境<br>rmvirtualenv [虚拟环境名称]</p><p>##添加远程桌面连接<br>1.开始前请确保你有能上网的主机两部（一个是CentOS7系统，一个是Windows10系统）</p><p>1、用SSH root用户登录Centos主机；</p><p>2、检查你的centos是否装了epel库 执行命令：</p><pre class="line-numbers language-none"><code class="language-none">$ rpm -qa|grep epel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果没有就安装：</p><pre class="line-numbers language-none"><code class="language-none">$ yum install epel-release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、安装xrdp，执行命令：</p><pre class="line-numbers language-none"><code class="language-none">$ yum install xrdp ；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一路Y下来</p><p>4、安装tigervnc-server，执行命令：</p><pre class="line-numbers language-none"><code class="language-none">$ yum install tigervnc-server；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、为用户root设置vnc密码，命令为：</p><pre class="line-numbers language-none"><code class="language-none">$ vncpasswd root；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、网上说还要配置xrdp.ini文件,修改XRDP最大连接数，否则远程连接可能无法成功。***我没有配置</p><p>7、配置或关闭SELinux </p><p>查看SELinux状态命令：</p><pre class="line-numbers language-none"><code class="language-none">$ /usr/sbin/sestatus -v <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>临时关闭SELinux（设置SELinux 成为permissive模式）命令：</p><pre class="line-numbers language-none"><code class="language-none">setenforce 0 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>8、关闭防火墙或者不关闭防火墙，打开3389端口命令，或直接永久关闭防火墙：（宝塔用户直接在WEB面板的安全里面放行端口即可）</p><pre class="line-numbers language-none"><code class="language-none">$ firewall-cmd --permanent --zone=public --add-port=3389/tcp$ firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>9、启动xrdp服务，并且设置为开机启动</p><p>启动服务命令：</p><pre class="line-numbers language-none"><code class="language-none">$ systemctl start xrdp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开机启动命令：</p><pre class="line-numbers language-none"><code class="language-none">$ systemctl enable xrdp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10、Win系统下“Win+R”键，在弹出的“运行”框中输入“mstsc“命令，按“确定”，打开Windows远程连接，输入IP地址和端口号如 192.168.1.10:22</p><p>开始远程连接，在弹出的Xrdp用户验证窗口中输入CentOS7的用户名和密码登录即可。Good Luck!</p><p>##安装jupyter notebook<br>###一个强大的python即时编辑环境<br>搭建jupyter远程登录环境：<br>安装jupyter包：</p><pre class="line-numbers language-none"><code class="language-none">$ pip install --user jupyterlab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入ipython，若失败则先安装ipython，建立软链接 </p><pre class="line-numbers language-none"><code class="language-none">$ ln /usr/local/python3/bin/ipython /usr/bin/ipython<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成jupyter密钥：</p><pre class="line-numbers language-none"><code class="language-none">$ from notebook.auth import passwd$ passwd() （之后填写并确认密码*不显示输入）复制输出的密钥$ exit（）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>建立软连接：</p><pre class="line-numbers language-none"><code class="language-none">$ ln -s /usr/local/Python3/bin/jupyter /usr/bin/jupyter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成jupyterlab配置文件：</p><pre class="line-numbers language-none"><code class="language-none">$ jupyter lab --generate-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置文件</p><pre class="line-numbers language-none"><code class="language-none">$ vim ~（这里填上面说的生成位置）/.jupyter/jupyter_notebook_config.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">将ip设置为*，允许任何IP访问c.NotebookApp.ip = '*'这里的密码填写上面生成的密钥c.NotebookApp.password = 'argon2:$argon2id$v=19$m=10240,t=10,p=8$H/PskzDjY8eqKrQU8pDSCA$fK4/TFffP1mJOePWZUP+UA' 禁止用host的浏览器打开jupyterc.NotebookApp.open_browser = False 监听端口设置为8888或其他c.NotebookApp.port = 8888允许远程访问 c.NotebookApp.allow_remote_access = True（保存退出）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关闭防火墙或者开放8888端口：</p><pre class="line-numbers language-none"><code class="language-none">$ systemctl stop firewalld.service$ ystemctl disable firewalld.service 或$ firewall-cmd --permanent --zone=public --add-port=8888/tcp$ firewall-cmd --reloadreboot（重启）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>jupyter nodebook</p><p>用其他电脑浏览器访问：<a href="http://ipaddress(你的服务器ip地址):8888/">http://ipaddress（你的服务器IP地址）:8888/</a></p><hr><p>卸载cuda：</p><pre class="line-numbers language-none"><code class="language-none">$ cd /Developer/NVIDIA/CUDA-10.1/bin$ sudo perl uninstall_cuda_10.1.pl --manifest=.cuda_toolkit_uninstall_manifest_do_not_delete.txt$ sudo rm -r /usr/local/cuda-10.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或</p><pre class="line-numbers language-none"><code class="language-none">$ sudo yum remove cuda $ sudo yum clean all（可选）$ sudo yum remove cuda*$ sudo yum remove nvidia*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>命令行和图形界面切换：</p><pre class="line-numbers language-none"><code class="language-none">$ cat /etc/inittab 或 systemctl get-default（查看开机设置）$ systemctl set-default multi-user.target(设置开机命令行）$ systemctl set-default graphical.target(设置开机图形化界面）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p>查看进程情况 top -c 或者 jobs</p><p>查看特定PID情况：ps -mp <pid> -o THREAD,tid,time | sort -k2r</pid></p><p>图形到DOS：Ctrl+alt+f2</p><p>DOS到图形：命令行输入startx<br>或者<br>在命令上输入 init 3 切换到DOS界面 输入init 5 切换到图形界面</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#前提假设&lt;br&gt;组装电脑（4人用）：&lt;br&gt;&lt;br&gt;基本配置需求如下：&lt;br&gt;&lt;br&gt;内存DDR4 2400 32G&lt;br&gt;&lt;br&gt;M.2接口固态 512G（用于存放程序和安装系统）&lt;br&gt;&lt;br&gt;机械硬盘 7200转 1T（用于存放数据）&lt;br&gt;&lt;br&gt;显卡 GTX 1</summary>
      
    
    
    
    
    <category term="Centos7" scheme="https://huang2019023239.github.io/tags/Centos7/"/>
    
    <category term="CUDA-CUDNN" scheme="https://huang2019023239.github.io/tags/CUDA-CUDNN/"/>
    
  </entry>
  
  <entry>
    <title>简历</title>
    <link href="https://huang2019023239.github.io/2020/05/26/jian-li/"/>
    <id>https://huang2019023239.github.io/2020/05/26/jian-li/</id>
    <published>2020-05-26T14:13:26.000Z</published>
    <updated>2021-05-28T14:07:00.004Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简历-necktie"><a href="#简历-necktie" class="headerlink" title="简历:necktie:"></a>简历<span class="github-emoji"><span>👔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f454.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h3><p><img src="/pic%5CResume.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;简历-necktie&quot;&gt;&lt;a href=&quot;#简历-necktie&quot; class=&quot;headerlink&quot; title=&quot;简历:necktie:&quot;&gt;&lt;/a&gt;简历&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;👔&lt;/span&gt;&lt;img src=&quot;h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HQC Blog 杂谈</title>
    <link href="https://huang2019023239.github.io/2020/05/25/hqc-blog/"/>
    <id>https://huang2019023239.github.io/2020/05/25/hqc-blog/</id>
    <published>2020-05-25T08:39:38.000Z</published>
    <updated>2021-05-28T06:22:09.869Z</updated>
    
    <content type="html"><![CDATA[<p>#本人最喜欢的一首诗</p><pre class="line-numbers language-none"><code class="language-none">    春江花月夜（唐）张若虚春江潮水连海平，海上明月共潮生。滟滟随波千万里，何处春江无月明！江流宛转绕芳甸，月照花林皆似霰；空里流霜不觉飞，汀上白沙看不见。江天一色无纤尘，皎皎空中孤月轮。江畔何人初见月？江月何年初照人？人生代代无穷已，江月年年望相似。不知江月待何人，但见长江送流水。白云一片去悠悠，青枫浦上不胜愁。谁家今夜扁舟子？何处相思明月楼？可怜楼上月裴回，应照离人妆镜台。玉户帘中卷不去，捣衣砧上拂还来。此时相望不相闻，愿逐月华流照君。鸿雁长飞光不度，鱼龙潜跃水成文。昨夜闲潭梦落花，可怜春半不还家。江水流春去欲尽，江潭落月复西斜。斜月沉沉藏海雾，碣石潇湘无限路。不知乘月几人归，落月摇情满江树。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#本人最喜欢的一首诗&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;    春江花月夜（唐）张若虚

春江潮水连海平，海上明月共潮生。

滟滟随波千万里，何处春江无月明！

江</summary>
      
    
    
    
    
    <category term="poem" scheme="https://huang2019023239.github.io/tags/poem/"/>
    
  </entry>
  
  <entry>
    <title>简介</title>
    <link href="https://huang2019023239.github.io/2020/05/25/hello-world/"/>
    <id>https://huang2019023239.github.io/2020/05/25/hello-world/</id>
    <published>2020-05-25T08:39:38.000Z</published>
    <updated>2021-05-27T05:46:13.141Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>Welcome to my Blog! </p><h2 id="履历-tm"><a href="#履历-tm" class="headerlink" title="履历:tm:"></a>履历<span class="github-emoji"><span>™</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2122.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h2><h3 id="学历-mortar-board"><a href="#学历-mortar-board" class="headerlink" title="学历:mortar_board:"></a>学历<span class="github-emoji"><span>🎓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f393.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h3><pre class="line-numbers language-none"><code class="language-none">$ 2015-2019 华南师范大学 学士$ 2019-2022 华南师范大学 硕士 电子信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>学校网址: <a href="https://www.scnu.edu.cn/">Scnu</a></p><h3 id="爱好-rainbow"><a href="#爱好-rainbow" class="headerlink" title="爱好:rainbow:"></a>爱好<span class="github-emoji"><span>🌈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f308.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h3><pre class="line-numbers language-none"><code class="language-none">$ 人文历史地理，特别喜欢日本德川家战国至江户时代的300年<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://zh.wikipedia.org/wiki/%E6%B1%9F%E6%88%B7%E6%97%B6%E4%BB%A3">江户幕府</a></p><h3 id="编程语言-computer"><a href="#编程语言-computer" class="headerlink" title="编程语言:computer:"></a>编程语言<span class="github-emoji"><span>💻</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h3><pre class="line-numbers language-none"><code class="language-none">$ Python Java C PHP JavaScript <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="系统-computer"><a href="#系统-computer" class="headerlink" title="系统:computer:"></a>系统<span class="github-emoji"><span>💻</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h3><pre class="line-numbers language-none"><code class="language-none">$ Centos Window<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="框架-容器-wrench"><a href="#框架-容器-wrench" class="headerlink" title="框架/容器:wrench:"></a>框架/容器<span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h3><pre class="line-numbers language-none"><code class="language-none">$ Pytorch Tensorflow Nginx Tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;关于我&quot;&gt;&lt;a href=&quot;#关于我&quot; class=&quot;headerlink&quot; title=&quot;关于我&quot;&gt;&lt;/a&gt;关于我&lt;/h2&gt;&lt;p&gt;Welcome to my Blog! &lt;/p&gt;
&lt;h2 id=&quot;履历-tm&quot;&gt;&lt;a href=&quot;#履历-tm&quot; clas</summary>
      
    
    
    
    
    <category term="总览" scheme="https://huang2019023239.github.io/tags/%E6%80%BB%E8%A7%88/"/>
    
  </entry>
  
</feed>
